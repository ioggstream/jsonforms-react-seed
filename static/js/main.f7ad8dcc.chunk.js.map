{"version":3,"sources":["App.tsx","registerServiceWorker.js","Rating.tsx","RatingControl.tsx","ratingControlTester.js","Markdown.tsx","MarkdownControl.tsx","markdownControlTester.js","index.tsx"],"names":["QRCode","require","jsPDF","html2canvas","styles","createStyles","container","padding","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","demoform","margin","textField","marginLeft","data","getDataAsStringFromStore","store","JSON","stringify","get","getState","renderQrcode","toCanvas","document","getElementById","console","log","getErrorAsStringFromStore","onFileSelector","event","fileList","target","files","file","img","type","indexOf","reader","FileReader","addEventListener","src","result","readAsDataURL","readImage","withStyles","classes","useState","displayDataAsString","setDisplayDataAsString","standaloneData","setStandaloneData","useEffect","updateStringData","stringData","subscribe","className","href","value","onClick","pdf_element","HTML_Width","offsetWidth","HTML_Height","offsetHeight","PDF_Width","top_left_margin","PDF_Height","canvas_image_width","canvas_image_height","totalPDFPages","Math","ceil","allowTaint","then","canvas","getContext","height","width","imgData","toDataURL","pdf","addImage","i","addPage","save","getPDF","action","method","id","Grid","justify","spacing","item","sm","canvasProps","style","borderBlockStyle","alignItems","alt","multiple","accept","onChange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","Rating","React","constructor","props","super","this","rating","hoverAt","handleMouseOver","idx","setState","handleMouseOut","handleClick","render","map","onMouseOver","onMouseOut","key","getDerivedStateFromProps","nextProps","prevState","withJsonFormsControlProps","handleChange","path","ev","Number","rankWith","scopeEndsWith","Markdown","source","uischema","text","uiTypeIs","yaml","refParser","richiedente","given_name","family_name","soggetto","dichiarazione","initState","jsonforms","cells","materialCells","renderers","materialRenderers","rootReducer","combineReducers","jsonformsReducer","createStore","devToolsEnhancer","p","URLSearchParams","search","schema_url","uischema_url","fetchYaml","url","a","fetch","y","safeLoad","debug","schema_yaml","dereference","err","schema","dispatch","Actions","init","registerRenderer","ratingControlTester","RatingControl","markdownControlTester","MarkdownControl","ReactDOM","URL","process","origin","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f7ad8dcc.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  JsonFormsDispatch,\n  JsonFormsReduxContext\n} from '@jsonforms/react';\nimport { Provider } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles, { WithStyles } from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport './App.css';\nimport { Store } from 'redux';\nimport { get } from 'lodash';\n\n// Signature\nimport SignatureCanvas from 'react-signature-canvas'\n\n\n// qrcode\nconst QRCode = require('qrcode')\n\n// pdf\nconst jsPDF = require(\"jspdf\");\nconst html2canvas = require(\"html2canvas\");\n\n\nconst styles = createStyles({\n  container: {\n    padding: '1em'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em'\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece'\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem'\n  },\n  textField: {\n    marginLeft: '5em'\n  }\n});\n\nexport interface AppProps extends WithStyles<typeof styles> {\n  store: Store;\n}\n\nconst data = {};\n\nconst getDataAsStringFromStore = (store: Store) =>\n  store\n    ? JSON.stringify(\n      get(store.getState(), ['jsonforms', 'core', 'data']),\n      null,\n      2\n    )\n    : '';\n\nconst getErrorAsStringFromStore = (store: Store) =>\n  store\n    ? JSON.stringify(\n      get(store.getState(), ['jsonforms', 'core', 'errors']),\n      null,\n      2\n    )\n    : '';\n\nconst readImage = (file: File, img: any) => {\n  // Check if the file is an image.\n  if (file.type && file.type.indexOf('image') === -1) {\n    console.log('File is not an image.', file.type, file);\n    return;\n  }\n\n  const reader = new FileReader();\n  reader.addEventListener('load', (event) => {\n    if (event.target)\n      img.src = event.target.result;\n  });\n  reader.readAsDataURL(file);\n};\n\nfunction renderQrcode(store: Store) {\n  QRCode.toCanvas(document.getElementById('qrcode'),\n    getDataAsStringFromStore(store)\n  );\n  console.log(\"store.errors\", getErrorAsStringFromStore(store));\n}\n/**\n * Convert an html element in PDF.\n * \n * @param document \n */\nfunction getPDF(pdf_element: any) {\n  console.log(\"document\", pdf_element);\n\n  var HTML_Width = pdf_element.offsetWidth;\n  var HTML_Height = pdf_element.offsetHeight;\n  var top_left_margin = 15;\n  var PDF_Width = HTML_Width + (top_left_margin * 2);\n  var PDF_Height = (PDF_Width * 1.5) + (top_left_margin * 2);\n  var canvas_image_width = HTML_Width;\n  var canvas_image_height = HTML_Height;\n\n  var totalPDFPages = Math.ceil(HTML_Height / PDF_Height) - 1;\n\n\n  html2canvas(pdf_element, { allowTaint: true }).then(function (canvas: any) {\n    canvas.getContext('2d');\n\n    console.log(canvas.height + \"  \" + canvas.width);\n\n\n    var imgData = canvas.toDataURL(\"image/png\", 1.0);\n    var pdf = new jsPDF('p', 'pt', [PDF_Width, PDF_Height]);\n    pdf.addImage(imgData, 'png', top_left_margin, top_left_margin, canvas_image_width, canvas_image_height);\n\n\n    for (var i = 1; i <= totalPDFPages; i++) {\n      pdf.addPage(PDF_Width, PDF_Height);\n      pdf.addImage(imgData, 'png', top_left_margin, -(PDF_Height * i) + (top_left_margin * 4), canvas_image_width, canvas_image_height);\n    }\n\n    pdf.save(\"tmp-jsonforms.pdf\");\n  });\n};\n\nconst onFileSelector = (event: any) => {\n  const fileList = event.target.files;\n  console.log(fileList);\n  readImage(fileList[0], document.getElementById(\"attachment-1\"));\n};\n\nconst App = ({ store, classes }: AppProps) => {\n  const [displayDataAsString, setDisplayDataAsString] = useState('');\n  const [standaloneData, setStandaloneData] = useState(data);\n  const getMyPDF = () => { getPDF(document.getElementById('rootform')) };\n  console.log(displayDataAsString);\n  console.log(setStandaloneData);\n\n  useEffect(() => {\n    const updateStringData = () => {\n      const stringData = getDataAsStringFromStore(store);\n      setDisplayDataAsString(stringData);\n    };\n    store.subscribe(updateStringData);\n    updateStringData();\n  }, [store]);\n\n  useEffect(() => {\n    setDisplayDataAsString(JSON.stringify(standaloneData, null, 2));\n  }, [standaloneData]);\n\n  useEffect(() => {\n    renderQrcode(store);\n  });\n\n  return (\n    <Fragment>\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='App-title'>Compila un form, allega i documenti e scarica il pdf</h1>\n          <p className='App-intro'>Reference an URI with schema.yaml and uischema.yaml to rock.</p>\n          <a href=\"?q=form-1/\" >Anagrafe del comune di Bugliano</a><br />\n          <a href=\"?q=form-2/\" >Istituto Comprensivo Franti</a><br />\n\n          <input type=\"button\" value=\"Download PDF.\" onClick={getMyPDF} />\n\n        </header>\n      </div>\n      <form action=\"\" method=\"POST\" id=\"rootform\">\n        <Grid\n          container\n          justify={'center'}\n          spacing={1}\n          className={classes.container}\n        >\n          <Grid item sm={6}>\n            <div className={classes.demoform} id='form'>\n              {store ? (\n                <Provider store={store}>\n                  <JsonFormsReduxContext>\n                    <JsonFormsDispatch />\n                  </JsonFormsReduxContext>\n                </Provider>\n              ) : null}\n              <SignatureCanvas\n                canvasProps={{ width: 500, height: 200, className: 'sigCanvas', style: { borderBlockStyle: \"solid\" }, }} />\n              <div className={classes.container}>\n                <canvas id=\"qrcode\" style={{ alignItems: 'center' }} />\n              </div>\n\n            </div>\n          </Grid>\n        </Grid>\n\n        <div id=\"attachments\">\n          <img alt=\"Attachment 1\" id=\"attachment-1\" />\n        </div>\n\n      </form>\n      Allega un file usando il bottone qui sotto.\n      <input type=\"file\" id=\"file-selector\" multiple accept=\".jpg, .jpeg, .png\" onChange={onFileSelector} height=\"50px\" />\n\n    </Fragment>\n  );\n\n}; //App\n/*\n        <Grid item sm={6}>\n          <Typography variant={'h3'} className={classes.title}>\n            Bound data\n          </Typography>\n          <div className={classes.dataContent}>\n            <pre id='boundData'>{displayDataAsString}</pre>\n          </div>\n        </Grid>\n\n*/\n\n\n\nexport default withStyles(styles)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n\n// TODO: typings\nexport class Rating extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      rating: props.value,\n      hoverAt: null\n    };\n  }\n\n  static getDerivedStateFromProps = (nextProps: any, prevState: any) => {\n    if (prevState.rating !== nextProps.value) {\n      return {\n        rating: nextProps.value,\n        hoverAt: prevState.hoverAt\n      };\n    }\n    return null;\n  };\n\n  handleMouseOver(idx: number) {\n    this.setState({\n      hoverAt: idx + 1\n    });\n  }\n\n  handleMouseOut() {\n    this.setState({\n      hoverAt: null\n    });\n  }\n\n  handleClick(idx: number) {\n    this.setState({\n      rating: idx + 1\n    });\n  }\n\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <div id='#/properties/rating'>\n        <p>Rating:</p>\n        {[0, 1, 2, 3, 4].map(i => {\n          const rating =\n            this.state.hoverAt != null ? this.state.hoverAt : this.state.rating;\n\n          return (\n            <span\n              onMouseOver={() => this.handleMouseOver(i)}\n              onMouseOut={() => this.handleMouseOut()}\n              onClick={() => {\n                this.handleClick(i);\n                onClick({ value: i + 1 });\n              }}\n              key={`${this.props.id}_${i}`}\n            >\n              {i < rating ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    onClick={(ev: any) => handleChange(path, Number(ev.value))}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import * as React from 'react';\nimport ReactMarkdown from 'react-markdown'\n\n// TODO: typings\nexport class Markdown extends React.Component<any, any> {\n\n  render() {\n    return (\n      <div>\n        <ReactMarkdown source={this.props.uischema.text} />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Markdown } from './Markdown';\n\ninterface MarkdownControlProps {\n  data: any;\n  path: string;\n  uischema: any;\n}\n\nconst MarkdownControl = ({ data, path, uischema }: MarkdownControlProps) => (\n  <Markdown\n    data={data}\n    path={path}\n    uischema={uischema}\n  />\n);\n\nexport default withJsonFormsControlProps(MarkdownControl);\n","import { rankWith, uiTypeIs } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  uiTypeIs('Markdown')\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { combineReducers, createStore, Reducer, AnyAction } from 'redux';\nimport { Actions, jsonformsReducer, JsonFormsState } from '@jsonforms/core';\nimport {\n  materialCells,\n  materialRenderers\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport MarkdownControl from './MarkdownControl';\nimport markdownControlTester from './markdownControlTester';\n\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nconst yaml = require(\"js-yaml\");\nconst refParser = require(\"json-schema-ref-parser\");\n\n\n// Setup Redux store\nconst data = {\n  richiedente: {\n    given_name: \"Roberto\",\n    family_name: \"Polli\"\n  },\n  soggetto: {},\n  dichiarazione: {}\n};\n\nconst initState: JsonFormsState = {\n  jsonforms: {\n    cells: materialCells,\n    renderers: materialRenderers\n  }\n};\n\nconst rootReducer: Reducer<JsonFormsState, AnyAction> = combineReducers({\n  jsonforms: jsonformsReducer()\n});\nconst store = createStore(rootReducer, initState, devToolsEnhancer({}));\n\nconst p = new URLSearchParams(window.location.search).get(\"q\") || \"form-1\";\nconst schema_url = p + '/schema.yaml'\nconst uischema_url = p + '/uischema.yaml'\n\nconst fetchYaml = async (url: string) => {\n  const text = await (await fetch(url)).text();\n  const y = yaml.safeLoad(text);\n  console.debug(url, y);\n  return y;\n}\n\nfetchYaml(schema_url)\n  .then((schema_yaml) => {\n    refParser.dereference(schema_yaml, (err: any, schema: any) => {\n      if (err) {\n        console.error(err);\n        throw err;\n      }\n      console.log(schema);\n      fetchYaml(uischema_url)\n        .then((uischema) => {\n          store.dispatch(Actions.init(data, schema, uischema));\n        });\n    });\n  });\n\n\n// Register custom renderer for the Redux tab\nstore.dispatch(Actions.registerRenderer(ratingControlTester, RatingControl));\nstore.dispatch(Actions.registerRenderer(markdownControlTester, MarkdownControl));\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}